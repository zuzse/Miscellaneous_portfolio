---
title: "Lambda by day"
author: "Zuzana"
date: "16.6. 2020"
output:
  word_document: default
  pdf_document: default
  html_document: default
---

```{r, echo = FALSE, message=FALSE, warning=FALSE}
library(rJava)
library(XLConnectJars)
library(XLConnect)
library(dplyr)
library(ggplot2)
library(magrittr)
library(readxl)
library(popbio)
```

##Loading the data##
```{r, warning=FALSE}
f1<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=1, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
f2<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=2, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
f3<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=3, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
f4<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=4, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
f5<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=5, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
f6<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=6, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
i1<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=7, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
i2<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=8, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
i3<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=9, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
i4<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=10, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
i5<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=11, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))
i6<-read_excel("C:/Users/Acer/Desktop/Reproduction_4.12.xlsx", sheet=12, col_types  = c("numeric", "text", "text", "numeric", "text", "numeric", "numeric", "numeric", "numeric",  "text", "text" ))


f1<-f1[,c(1:8, 10)]
f2<-f2[,c(1:8, 10)]
f3<-f3[,c(1:8, 10)]
f4<-f4[,c(1:8, 10)]
f5<-f5[,c(1:8, 10)]
f6<-f6[,c(1:8, 10)]
i1<-i1[,c(1:8, 10)]
i2<-i2[,c(1:8, 10)]
i3<-i3[,c(1:8, 10)]
i4<-i4[,c(1:8, 10)]
i5<-i5[,c(1:8, 10)]
i6<-i6[,c(1:8, 10)]

repdata<-rbind(f1,f2,f3,f4,f5,f6,i1,i2,i3,i4,i5,i6)
str(repdata)

repdata$Block <- as.factor(repdata$Block)
repdata$Selection<-as.factor(repdata$Selection)
repdata$Line<-as.factor(repdata$Line)
repdata$Larvae <- as.numeric(repdata$Larvae)

repdata$Family.ID<-as.factor(paste(repdata$Selection,repdata$Line,repdata$Family))
repdata$Plate.ID<-as.factor(paste(repdata$Selection,repdata$Line,repdata$Family,repdata$Individual,repdata$Temp))
repdata$SeleLine <- as.factor(paste (repdata$Selection, repdata$Line))
repdata$Temp <- as.factor(repdata$Temp)

repdata$Matricide[is.na(repdata$Matricide)] <- 0 # not to na.omit all of the females who didnt die due to matricide
repdata$Matricide <-as.factor(repdata$Matricide)
repdata2 <- na.omit(repdata)
repdata2$Matricide[repdata2$Matricide == "Infection"] <- "0" # fix a typo - in column matricyde there was infection instead
str(repdata2)
```

### Exluding censored   ###

To exclude censored worms and walled worms or females with missing both males I created list of worms that need to be censored and 'subtracted' this list from the data frame
```{r, warning=FALSE}
list_censored <- c("Fast 1 8 c 25", "Fast 1 11 c 25", "Fast 1 1 c 25", "Fast 1 5 d 25", "Fast 2 23 a 25", "Fast 2 16 a 25",
                   "Fast 2 26 a 25",  "Fast 2 22 b 20", "Fast 3 1 a 20", "Fast 3 13 b 20", "Fast 3 17 b 25", "Fast 3 5 c 20", "Fast 4 17 a 25", 
                   "Increase 1 8 d 25", "Increase 1 11 d 25", "Increase 1 17 a 20", "Increase 1 17 d 25", "Increase 2 6 b 25", "Increase 2 23 b 25", 
                   "Increase 4 9 c 20", "Increase 5 4 b 20", "Increase 5 13 a 25", "Increase 5 3 c 25", "Increase 6 4 a 20", "Increase 6 11 d 20",
                   "Increase 6 21 a 25")
```

##Lambda##
```{r, warning=FALSE}
raw_lambda <- repdata2 
raw_lambda$Plate.ID[raw_lambda$Plate.ID %in% list_censored ]<-NA  # censored females, walled females, females without males -> NA
censored_lambda <- raw_lambda[!(is.na(raw_lambda$Plate.ID)), ] 

lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")
head(lambda.data)
```

##Lambda per day##

I calcultaed lambda for day 0-6.There was only slight increase in lambda throughout days 3 and 4 so it seems that 6 days should be more than enough.
I used the same formula, only subsetting data on the no of days I need - for example *day0* I subsetted the data on day 0, *day1* I subsetted data to include days 0 and 1, and so on. I also changed the matrix following the formula: diag(No of days, No of days + 1, No of days +2)

```{r,warning=FALSE}
# Day0
lambda.data <- subset(lambda.data, lambda.data$Day %in% (0)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,2,3)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day0 <- lambda.final
str(lambda.final)


# day 1 
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:1)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,3,4)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day1 <- lambda.final
str(lambda.final)



# day 2
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:2)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,4,5)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day2 <- lambda.final
str(lambda.final)


# day 3
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:3)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,5,6)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day3 <- lambda.final
str(lambda.final)



# day 4
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:4)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,6,7)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day4 <- lambda.final
str(lambda.final)



# day 5
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:5)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,7,8)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day5 <- lambda.final
str(lambda.final)



# day 6
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:6)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,8,9)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day6 <- lambda.final
str(lambda.final)

```

### Total lambda###
I calculated total labda - lambda for the day 14 which is thelast day where I have all the data for all the worms. After this day there was no reproduction.

```{r, warning=FALSE}
# day 14
lambda.data<-as.data.frame.table(with(censored_lambda,tapply(Larvae,list(Day,Plate.ID),sum)))
names(lambda.data)<-c("Day","Plate.ID","Fecundity")

lambda.data <- subset(lambda.data, lambda.data$Day %in% (0:14)) # number of days have to be the same for each line -> trimming them to 14 days which is maximum that was recorded for some of the lines
lambda.data$Fecundity[is.na(lambda.data$Fecundity)] <- 0   # NA in number of larvae have to be replaced by 0
no.plates<-length(levels(lambda.data$Plate.ID))
lambda<-c(rep(NA,1,no.plates))
survival.matrix<-diag(1,15,16)
plates<-levels(lambda.data$Plate.ID)

for (i in plates) {
  data_tmp <- lambda.data[lambda.data$Plate.ID==i,]
  reg_result<-lambda(rbind(c(0,0,data_tmp$Fecundity),survival.matrix))
  lambda[i]<-reg_result[1]
}

splitLambda<-strsplit(plates, " ") #Split the unique ID by empty space
matrix<-as.data.frame(matrix(unlist(splitLambda),ncol=5,byrow=T))
colnames(matrix)<-c("Selection","Line","Family","Individual","Temp") # Now we have all factors etc extracted from the unique ID, ready for analyses!
lambda<-as.data.frame(lambda)[(length(lambda)/2+1):length(lambda),] #to remove the first 50% values that are NAs (due to non-perfect coding of the loop)
lambda.final<-cbind(matrix,lambda)
day14 <- lambda.final
str(lambda.final)
```

##Creating a data frame containing all the lambdas##
```{r, warning=FALSE}
Lambdas <- day0
Lambdas$day1 <- day1$lambda
Lambdas$day2 <- day2$lambda
Lambdas$day3 <- day3$lambda
Lambdas$day4 <- day4$lambda
Lambdas$day5 <- day5$lambda
Lambdas$day6 <- day6$lambda
Lambdas$day14 <- day14$lambda

names(Lambdas)[6] <- "day0"
str(Lambdas)
```
##Relative Lambda##
I divided Lambda for each day by total lambda (Day14) and all created a new data frame containing only altered data
```{r, warning=FALSE}
Lambdas2 <- Lambdas %>% transmute(Selection, Line, Family, Individual, Temp, day0/day14, day1/day14, day2/day14, day3/day14, day4/day14, day5/day14, day6/day14)
Lambdas2 <- na.omit(Lambdas2)
names(Lambdas2) <- c("Selection", "Line", "Family", "Individual", "Temp", "day0", "day1", "day2", "day3", "day4", "day5", "day6")
str(Lambdas2)
```

##Making graph for eachtemperature##

###20C###

I calculated median lambda for eachd ay
```{r, warning=FALSE}
Lambdas20 <- filter(Lambdas2, Temp == "20")
Lambdas20$Plate.ID<-as.factor(paste(Lambdas20$Selection,Lambdas20$Line,Lambdas20$Family,Lambdas20$Individual,Lambdas20$Temp))

medians20 <-  Lambdas20 %>% summarise(med0 = median(day0), med1 = median(day1), med2 = median(day2), med3 = median(day3), med4 = median(day4), med5 = median(day5), med6 = median(day6))
# to change the dataframe so that I can use it for making plots
medians20 <- data.frame(t(medians20)) # to flip the axes
medians20$day <- (0:6)
names(medians20) <- c( "median", "day")
medians20 %>% ggplot(aes(day, median)) + geom_point() + geom_line() + ggtitle("20C")
```


###25C###

```{r,warning=FALSE}
#### 25C ####
Lambdas25 <- filter(Lambdas2, Temp == "25")
Lambdas25$Plate.ID<-as.factor(paste(Lambdas25$Selection,Lambdas25$Line,Lambdas25$Family,Lambdas25$Individual,Lambdas25$Temp))

medians25 <-  Lambdas25 %>% summarise(med0 = median(day0), med1 = median(day1), med2 = median(day2), med3 = median(day3), med4 = median(day4), med5 = median(day5), med6 = median(day6))
medians25 <- data.frame(t(medians25)) # to flip the axes
medians25$day <- (0:6)
names(medians25) <- c( "median", "day")
medians25 %>% ggplot(aes(day, median)) + geom_point() + geom_line() + ggtitle("25C")
```
